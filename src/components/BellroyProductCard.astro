---
import "../styles/product-card.css";
import { productData } from "../constants";
import { formatPrice } from '../utils';
import type {
  Product,
} from '../types'

// TypeScript definitions
export interface Props {
  productId: string;
  className?: string;
}

const { productId, className = '' } = Astro.props;

// Attempt to get the product by ID
let product: Product | undefined;
let error: string | null = null;

try {
  product = productData[productId];
  if (!product) {
    error = `Product not found: ${productId}`;
  }
} catch (e) {
  const err = e as Error;
  error = err.message || 'Error loading product';
}

// Find the first available color (for pre-selecting)
const firstAvailableColor = product?.colors?.find(color => color.inStock);
const initialImageSrc = firstAvailableColor?.svgUrl || product?.imageSrc;
---

<div id={`product-card-${productId}`} class={className || "product-card-container"}>
  {error ? (
    <div class="product-card__error">{error}</div>
  ) : !product ? (
    <div class="product-card__loading">Loading product...</div>
  ) : (
    <div class="product-card">
      <!-- Product image with hover button -->
      <div class="product-card__image-container">
        <!-- Show Inside Button (only visible on hover) -->
        <button class="product-card__show-inside-btn">
          SHOW INSIDE <span class="plus-icon">+</span>
        </button>
        
        <a href={`/products/${product.id}`} class="product-card__image-link">
          <img 
            id={`product-image-${productId}`}
            src={initialImageSrc}
            alt={product.name} 
            class="product-card__image"
          />
          
          {product.isNew && (
            <div class="product-card__badge product-card__badge--new">
              New
            </div>
          )}
        </a>
      </div>
      
      <!-- Product info -->
      <div class="product-card__info">
        <h3 class="product-card__name">
          <a href={`/products/${product.id}`} class="product-card__name-link">
            {product.name} {product.hasRFID && <span>â€“ RFID safe</span>}
          </a>
        </h3>
        
        <div class="product-card__price-container">
          <div class="product-card__price">{formatPrice(product.price, product.currency)}</div>
        </div>
        
        {/* Color selection row */}
        {product.colors && product.colors.length > 0 && (
          <div class="product-card__colors">
            {product.colors.map(color => (
              <button 
                class={`product-card__color-option ${
                  !color.inStock ? "product-card__color-option--out-of-stock" : ""
                } ${
                  color.id === firstAvailableColor?.id ? "product-card__color-option--selected" : ""
                }`}
                style={`background-color: ${color.hexCode};`}
                title={color.name}
                aria-label={`${color.name} color${!color.inStock ? ' (out of stock)' : ''}`}
                disabled={!color.inStock}
                data-color-id={color.id}
                data-svg-url={color.svgUrl}
                data-product-id={productId}
              >
                <span class="sr-only">{color.name}</span>
              </button>
            ))}
          </div>
        )}
        
        {/* Product description */}
        {product.description && (
          <div class="product-card__description">
            {product.description}
          </div>
        )}
      </div>
    </div>
  )}
</div>